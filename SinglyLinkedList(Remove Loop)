public class SinglyLinkedList{
    Node head;
    public static class Node{
        int data;
        Node next;
        Node(int data){
            this.data=data;
            this.next=null;
        }
    }
    SinglyLinkedList(){
        this.head = null;
    }
    
    public void remove(Node slowptr){
        Node temp=this.head;
        while(slowptr.next!=temp.next){
            slowptr=slowptr.next;
            temp=temp.next;
        }
        slowptr.next=null;
    }
    
    public void removeloop(){
        Node fastptr=this.head;
        Node slowptr=this.head;
        while(fastptr!=null && fastptr.next!=null){
            fastptr=fastptr.next.next;
            slowptr=slowptr.next;
            if(slowptr == fastptr){
               remove(slowptr);
               break;
            }
        }
    }
    
    public void traverse(){
        Node current = this.head;
        while(current!=null){
            System.out.print(current.data+"->");
            current=current.next;
        }
        System.out.println("null");
    }
    
    public static void main(String args[]){
        System.out.println("Singly Linked List");
        SinglyLinkedList sll = new SinglyLinkedList();
        sll.head = new Node(1);
        Node first = new Node(2);
        Node second = new Node(3);
        Node third = new Node(4);
        Node fourth = new Node(5);
        Node fifth = new Node(6);
        sll.head.next = first;
        first.next = second;
        second.next = third;
        third.next = fourth;
        fourth.next = fifth;
        fifth.next = second;
        sll.removeloop();
        System.out.println("traverse");
        sll.traverse();
        
    }
}
